from config import CONN, CURSOR

class Song:
    def __init__(self, name, album):
        self.id = None #an id is autogenerated from the database
        self.name = name
        self.album = album
        
    @classmethod
    def create_table(self):
        sql = """
            CREATE TABLE IF NOT EXISTS songs (
                id INTEGER PRIMARY KEY,
                name TEXT,
                album TEXT
            )
        """

        CURSOR.execute(sql)
        CONN.commit()
  # the save saves the attributes of a given instance in a new row of the table in the database.   
    def save(self):
        sql = """
            INSERT INTO songs (name, album)
            VALUES (?, ?) 
        """

        CURSOR.execute(sql, (self.name, self.album))
        CONN.commit()
        self.id = CURSOR.execute("SELECT last_insert_rowid() FROM songs").fetchone()[0]
    
    @classmethod
    # the return value of the create() method should always be the object that we created.
    def create(cls, name, album):
        song = Song(name, album)
        song.save()
        return song
    